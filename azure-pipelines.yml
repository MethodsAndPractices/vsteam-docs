parameters:
  - name: BuildFrom
    type: string
    default: Markdown
    values:
      - Markdown
      - Module
  - name: Deploy
    type: boolean
    default: true

trigger:
  - master

pool:
  vmImage: 'windows-latest'

resources:
  repositories:
    - repository: github_vsteam
      type: github
      name: "MethodsAndPractices/vsteam"
      endpoint: VS-TeamPipelines

steps:
  - checkout: self
    persistCredentials: true
  - checkout: github_vsteam
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - ${{ if eq(parameters.BuildFrom, 'Markdown') }}:
    - task: PowerShell@2
      displayName: 'Build VSTeam Module Help - From Markdown'
      inputs:
        targetType: 'inline'
        script: |
          .\vsteam-docs\tools\ci\Create-VSTeamHelp.ps1 -Path ".\vsteam\.docs" -Destination ".\vsteam-docs\docs\module-vsteam"

  - ${{ if eq(parameters.BuildFrom, 'Module') }}:
    - task: PowerShell@2
      displayName: 'Build VSTeam Module Help - From Module'
      inputs:
        targetType: 'inline'
        script: |
          if (-not (Get-Module VSTeam -ListAvailable)) {
            Install-Module VSTeam -Scope CurrentUser -Force
          }

          if (-not (Get-Module platyPS -ListAvailable)) {
              Install-Module platyPS -Scope CurrentUser -Force
          }
          New-MarkdownHelp -Module VSTeam -OutputFolder .\vsteam-docs\docs\module-vsteam -Force
          .\vsteam-docs\tools\ci\Create-DocusaurusMenuFile.ps1 -MarkdownPath ".\vsteam-docs\docs\module-vsteam"
  - script: |
      cd vsteam-docs/website
      yarn install
      yarn run build
    displayName: 'docs build'

  - ${{ if eq(parameters.Deploy, true)}}:
    - script: |
        git config --global user.name "${GH_NAME}"
        git config --global user.email "${GH_EMAIL}"
        echo "machine github.com login ${GH_LOGIN} password ${GH_TOKEN}" > ~/.netrc
        cd vsteam-docs/website
        yarn install
        GIT_USER="${GH_LOGIN}" CURRENT_BRANCH=$(Build.SourceBranch) yarn run deploy
      env:
        GH_NAME: $(GH_NAME)
        GH_LOGIN: $(GH_LOGIN)
        GH_EMAIL: $(GH_EMAIL)
        GH_TOKEN: $(GH_TOKEN)
      displayName: 'docs deploy'