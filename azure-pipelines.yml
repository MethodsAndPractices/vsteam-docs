name: $(Build.BuildID)

trigger:
  - trunk

parameters:
  - name: agent
    type: string
    default: macOS-latest
    values:
      - macOS-latest
      - ubuntu-lastest
      - windows-latest
  - name: nodeVersion
    type: string
    default: "12.x"
variables:
  defaultName: "trunk"
  system.debug: true

stages:
  - stage: Build
    displayName: Build Stage
    # pool:
    #   vmImage: ${{parameters.agent}}
    jobs:
      - job: Build_Docs
        displayName: Build Docs
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: "specific"
              project: "3e857acd-880f-4056-a46b-1de672ca55cc"
              definition: "62"
              buildVersionToDownload: "latestFromBranch"
              branchName: "refs/heads/trunk"
              artifactName: "Package"
              targetPath: "$(Pipeline.Workspace)/Package"

          - task: NodeTool@0
            displayName: "Install Node.js Version ${{parameters.nodeVersion}}"
            inputs:
              versionSpec: ${{parameters.nodeVersion}}

          - task: YarnInstaller@3
            inputs:
              versionSpec: "1.x"

          - script: yarn install
            displayName: yarn install

          - script: yarn build:VSTeamHelp
            displayName: generate VSTeam module docs

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)/docs/modules/vsteam/commands'
              artifact: 'docs'
              publishLocation: 'pipeline'

  - stage: Deploy
    displayName: GitHub Pages
    dependsOn: Build
    jobs:
    - deployment: Deploy
      displayName: GitHub Pages
      environment: 'GitHub Pages'
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              persistCredentials: true

            - download: current
              artifact: docs

            - task: NodeTool@0
              displayName: "Install Node.js Version ${{parameters.nodeVersion}}"
              inputs:
                versionSpec: ${{parameters.nodeVersion}}

            - task: YarnInstaller@3
              inputs:
                versionSpec: "1.x"