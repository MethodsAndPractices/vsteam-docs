(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{273:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return o}));var n=a(2),i=a(9),l=(a(0),a(317)),r={"external help file":"VSTeam-Help.xml","Module Name":"VSTeam","online version":null,schema:"2.0.0"},c={id:"Get-VSTeamBuild",isDocsHomePage:!1,title:"Get-VSTeamBuild",description:"Get-VSTeamBuild",source:"@site/modules/vsteam/Get-VSTeamBuild.md",permalink:"/vsteam-docs/modules/vsteam/Get-VSTeamBuild",editUrl:"https://github.com/MethodsAndPractices/vsteam/.docs/modules/vsteam/Get-VSTeamBuild.md",sidebar:"modules",previous:{title:"Get-VSTeamArea",permalink:"/vsteam-docs/modules/vsteam/Get-VSTeamArea"},next:{title:"Get-VSTeamBuildArtifact",permalink:"/vsteam-docs/modules/vsteam/Get-VSTeamBuildArtifact"}},s=[{value:"SYNOPSIS",id:"synopsis",children:[]},{value:"SYNTAX",id:"syntax",children:[{value:"List (Default)",id:"list-default",children:[]},{value:"ByID",id:"byid",children:[]}]},{value:"DESCRIPTION",id:"description",children:[]},{value:"EXAMPLES",id:"examples",children:[{value:"EXAMPLE 1",id:"example-1",children:[]},{value:"EXAMPLE 2",id:"example-2",children:[]},{value:"EXAMPLE 3",id:"example-3",children:[]},{value:"EXAMPLE 4",id:"example-4",children:[]},{value:"EXAMPLE 5",id:"example-5",children:[]}]},{value:"PARAMETERS",id:"parameters",children:[{value:"-ProjectName",id:"-projectname",children:[]},{value:"-Top",id:"-top",children:[]},{value:"-ResultFilter",id:"-resultfilter",children:[]},{value:"-ReasonFilter",id:"-reasonfilter",children:[]},{value:"-StatusFilter",id:"-statusfilter",children:[]},{value:"-Queues",id:"-queues",children:[]},{value:"-Definitions",id:"-definitions",children:[]},{value:"-BuildNumber",id:"-buildnumber",children:[]},{value:"-Type",id:"-type",children:[]},{value:"-MaxBuildsPerDefinition",id:"-maxbuildsperdefinition",children:[]},{value:"-Properties",id:"-properties",children:[]},{value:"-Id",id:"-id",children:[]},{value:"CommonParameters",id:"commonparameters",children:[]}]},{value:"INPUTS",id:"inputs",children:[]},{value:"OUTPUTS",id:"outputs",children:[{value:"Team.Build",id:"teambuild",children:[]}]},{value:"NOTES",id:"notes",children:[]},{value:"RELATED LINKS",id:"related-links",children:[]}],u={rightToc:s};function o(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"get-vsteambuild"},"Get-VSTeamBuild"),Object(l.b)("h2",{id:"synopsis"},"SYNOPSIS"),Object(l.b)("p",null,"Gets the builds for a team project."),Object(l.b)("h2",{id:"syntax"},"SYNTAX"),Object(l.b)("h3",{id:"list-default"},"List (Default)"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"Get-VSTeamBuild [-Top <Int32>] [-ResultFilter <String>] [-ReasonFilter <String>] [-StatusFilter <String>]\n [-Queues <Int32[]>] [-Definitions <Int32[]>] [-BuildNumber <String>] [-Type <String>]\n [-MaxBuildsPerDefinition <Int32>] [-Properties <String[]>] [-ProjectName] <String> [<CommonParameters>]\n")),Object(l.b)("h3",{id:"byid"},"ByID"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"Get-VSTeamBuild [-Id <Int32[]>] [-ProjectName] <String> [<CommonParameters>]\n")),Object(l.b)("h2",{id:"description"},"DESCRIPTION"),Object(l.b)("p",null,"The Get-VSTeamBuild function gets the builds for a team project."),Object(l.b)("p",null,"With just a project name, this function gets all of the builds for that team project."),Object(l.b)("p",null,"You can also specify a particular build by ID."),Object(l.b)("h2",{id:"examples"},"EXAMPLES"),Object(l.b)("h3",{id:"example-1"},"EXAMPLE 1"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"PS C:\\> Get-VSTeamBuild -ProjectName demo | Format-List *\n")),Object(l.b)("p",null,"This command gets a list of all builds in the demo project."),Object(l.b)("p",null,"The pipeline operator (|) passes the data to the Format-List cmdlet, which displays all available properties (*) of the build objects."),Object(l.b)("h3",{id:"example-2"},"EXAMPLE 2"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"PS C:\\> Get-VSTeamBuild -ProjectName demo -top 5 -resultFilter failed\n")),Object(l.b)("p",null,"This command gets a list of 5 failed builds in the demo project."),Object(l.b)("h3",{id:"example-3"},"EXAMPLE 3"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"PS C:\\> 1203,1204 | Get-VSTeamBuild -ProjectName demo\n")),Object(l.b)("p",null,"This command gets builds with IDs 1203 and 1204 by using the pipeline."),Object(l.b)("h3",{id:"example-4"},"EXAMPLE 4"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"PS C:\\> Get-VSTeamBuild -ProjectName demo -ID 1203,1204\n")),Object(l.b)("p",null,"This command gets builds with IDs 1203 and 1204 by using the ID parameter."),Object(l.b)("h3",{id:"example-5"},"EXAMPLE 5"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"PS C:\\> Get-VSTeamBuild -ProjectName demo -ID 1203 -Raw\n")),Object(l.b)("p",null,"This command returns the raw object returned from the server."),Object(l.b)("h2",{id:"parameters"},"PARAMETERS"),Object(l.b)("h3",{id:"-projectname"},"-ProjectName"),Object(l.b)("p",null,"Specifies the team project for which this function operates."),Object(l.b)("p",null,"You can tab complete from a list of available projects."),Object(l.b)("p",null,"You can use Set-VSTeamDefaultProject to set a default project so you do not have to pass the ProjectName with each call."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 0\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-top"},"-Top"),Object(l.b)("p",null,"Specifies the maximum number to return."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: 0\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-resultfilter"},"-ResultFilter"),Object(l.b)("p",null,"Specifies the result of the builds to return Succeeded, PartiallySucceeded, Failed, or Canceled."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-reasonfilter"},"-ReasonFilter"),Object(l.b)("p",null,"Specifies the reason the build was created of the builds to return Manual, IndividualCI, BatchedCI, Schedule, UserCreated, ValidateShelveSet, CheckInShelveSet, Triggered, or All."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-statusfilter"},"-StatusFilter"),Object(l.b)("p",null,"Specifies the status of the builds to return InProgress, Completed, Cancelling, Postponed, NotStarted, or All."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-queues"},"-Queues"),Object(l.b)("p",null,"A comma-delimited list of queue IDs that specifies the builds to return."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32[]\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-definitions"},"-Definitions"),Object(l.b)("p",null,"A comma-delimited list of build definition IDs that specifies the builds to return."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32[]\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-buildnumber"},"-BuildNumber"),Object(l.b)("p",null,"Returns the build with this build number."),Object(l.b)("p",null,"You can also use ",Object(l.b)("em",{parentName:"p"}," for a starts with search.\nFor example: 2015")," Will return all build numbers that start with 2015."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-type"},"-Type"),Object(l.b)("p",null,"The type of builds to retrieve."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-maxbuildsperdefinition"},"-MaxBuildsPerDefinition"),Object(l.b)("p",null,"The maximum number of builds to retrieve for each definition."),Object(l.b)("p",null,"This is only valid when definitions is also specified."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-properties"},"-Properties"),Object(l.b)("p",null,"A comma-delimited list of extended properties to retrieve."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String[]\nParameter Sets: List\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"-id"},"-Id"),Object(l.b)("p",null,"Specifies one or more builds by ID."),Object(l.b)("p",null,"To specify multiple IDs, use commas to separate the IDs."),Object(l.b)("p",null,"To find the ID of a build, type Get-VSTeamBuild."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32[]\nParameter Sets: ByID\nAliases: BuildID\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByValue)\nAccept wildcard characters: False\n")),Object(l.b)("h3",{id:"commonparameters"},"CommonParameters"),Object(l.b)("p",null,"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"http://go.microsoft.com/fwlink/?LinkID=113216"}),"about_CommonParameters"),"."),Object(l.b)("h2",{id:"inputs"},"INPUTS"),Object(l.b)("h2",{id:"outputs"},"OUTPUTS"),Object(l.b)("h3",{id:"teambuild"},"Team.Build"),Object(l.b)("h2",{id:"notes"},"NOTES"),Object(l.b)("p",null,"This function has a Dynamic Parameter for ProjectName that specifies the project for which this function gets builds."),Object(l.b)("p",null,"You can tab complete from a list of available projects."),Object(l.b)("p",null,"You can use Set-VSTeamDefaultProject to set a default project so you do not have to pass the ProjectName with each call."),Object(l.b)("p",null,"You can pipe build IDs to this function."),Object(l.b)("h2",{id:"related-links"},"RELATED LINKS"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:""}),"Set-VSTeamAccount")),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:""}),"Set-VSTeamDefaultProject")),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:""}),"Add-VSTeamBuild")),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:""}),"Remove-VSTeamBuild")))}o.isMDXComponent=!0},317:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),i=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var u=i.a.createContext({}),o=function(e){var t=i.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=o(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,r=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=o(a),d=n,m=p["".concat(r,".").concat(d)]||p[d]||b[d]||l;return a?i.a.createElement(m,c(c({ref:t},u),{},{components:a})):i.a.createElement(m,c({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var u=2;u<l;u++)r[u]=a[u];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);