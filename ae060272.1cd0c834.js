(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{248:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return b}));var r=a(2),l=a(9),n=(a(0),a(313)),i={},c={id:"Module/Get-VSTeamBuild",isDocsHomePage:!1,title:"Get-VSTeamBuild",description:"Get-VSTeamBuild",source:"@site/docs\\Module\\Get-VSTeamBuild.md",permalink:"/vsteam-docs/docs/Module/Get-VSTeamBuild",editUrl:"https://github.com/MethodsAndPractices/vsteam-docs/edit/master/website/docs/Module/Get-VSTeamBuild.md"},o=[{value:"SYNOPSIS",id:"synopsis",children:[]},{value:"SYNTAX",id:"syntax",children:[]},{value:"DESCRIPTION",id:"description",children:[]},{value:"EXAMPLES",id:"examples",children:[{value:"-------------------------- EXAMPLE 1 --------------------------",id:"---------------------------example-1---------------------------",children:[]},{value:"-------------------------- EXAMPLE 2 --------------------------",id:"---------------------------example-2---------------------------",children:[]},{value:"-------------------------- EXAMPLE 3 --------------------------",id:"---------------------------example-3---------------------------",children:[]},{value:"-------------------------- EXAMPLE 4 --------------------------",id:"---------------------------example-4---------------------------",children:[]},{value:"-------------------------- EXAMPLE 5 --------------------------",id:"---------------------------example-5---------------------------",children:[]}]},{value:"PARAMETERS",id:"parameters",children:[{value:"-ProjectName",id:"-projectname",children:[]},{value:"-Top",id:"-top",children:[]},{value:"-ResultFilter",id:"-resultfilter",children:[]},{value:"-ReasonFilter",id:"-reasonfilter",children:[]},{value:"-StatusFilter",id:"-statusfilter",children:[]},{value:"-Queues",id:"-queues",children:[]},{value:"-Definitions",id:"-definitions",children:[]},{value:"-BuildNumber",id:"-buildnumber",children:[]},{value:"-Type",id:"-type",children:[]},{value:"-MaxBuildsPerDefinition",id:"-maxbuildsperdefinition",children:[]},{value:"-Properties",id:"-properties",children:[]},{value:"-Id",id:"-id",children:[]},{value:"-JSON",id:"-json",children:[]},{value:"-Raw",id:"-raw",children:[]}]},{value:"INPUTS",id:"inputs",children:[]},{value:"OUTPUTS",id:"outputs",children:[{value:"Team.Build",id:"teambuild",children:[]}]},{value:"NOTES",id:"notes",children:[]},{value:"RELATED LINKS",id:"related-links",children:[]}],u={rightToc:o};function b(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"get-vsteambuild"},"Get-VSTeamBuild"),Object(n.b)("h2",{id:"synopsis"},"SYNOPSIS"),Object(n.b)("p",null,"Gets the builds for a team project."),Object(n.b)("h2",{id:"syntax"},"SYNTAX"),Object(n.b)("h2",{id:"description"},"DESCRIPTION"),Object(n.b)("p",null,"The Get-VSTeamBuild function gets the builds for a team project."),Object(n.b)("p",null,"With just a project name, this function gets all of the builds for that team project."),Object(n.b)("p",null,"You can also specify a particular build by ID."),Object(n.b)("h2",{id:"examples"},"EXAMPLES"),Object(n.b)("h3",{id:"---------------------------example-1---------------------------"},"-------------------------- EXAMPLE 1 --------------------------"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-PowerShell"}),"PS C:\\> Get-VSTeamBuild -ProjectName demo | Format-List *\n")),Object(n.b)("p",null,"This command gets a list of all builds in the demo project."),Object(n.b)("p",null,"The pipeline operator (|) passes the data to the Format-List cmdlet, which\ndisplays all available properties (*) of the build objects."),Object(n.b)("h3",{id:"---------------------------example-2---------------------------"},"-------------------------- EXAMPLE 2 --------------------------"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-PowerShell"}),"PS C:\\> Get-VSTeamBuild -ProjectName demo -top 5 -resultFilter failed\n")),Object(n.b)("p",null,"This command gets a list of 5 failed builds in the demo project."),Object(n.b)("h3",{id:"---------------------------example-3---------------------------"},"-------------------------- EXAMPLE 3 --------------------------"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-PowerShell"}),"PS C:\\> 1203,1204 | Get-VSTeamBuild -ProjectName demo\n")),Object(n.b)("p",null,"This command gets builds with IDs 1203 and 1204 by using the pipeline."),Object(n.b)("h3",{id:"---------------------------example-4---------------------------"},"-------------------------- EXAMPLE 4 --------------------------"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-PowerShell"}),"PS C:\\> Get-VSTeamBuild -ProjectName demo -ID 1203,1204\n")),Object(n.b)("p",null,"This command gets builds with IDs 1203 and 1204 by using the ID parameter."),Object(n.b)("h3",{id:"---------------------------example-5---------------------------"},"-------------------------- EXAMPLE 5 --------------------------"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-PowerShell"}),"PS C:\\> Get-VSTeamBuild -ProjectName demo -ID 1203 -Raw\n")),Object(n.b)("p",null,"This command returns the raw object returned from the server."),Object(n.b)("h2",{id:"parameters"},"PARAMETERS"),Object(n.b)("h3",{id:"-projectname"},"-ProjectName"),Object(n.b)("p",null,"Specifies the team project for which this function operates."),Object(n.b)("p",null,"You can tab complete from a list of available projects."),Object(n.b)("p",null,"You can use Set-VSTeamDefaultProject to set a default project so\nyou do not have to pass the ProjectName with each call."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nPosition: 0\nRequired: True\nAccept pipeline input: true (ByPropertyName)\n")),Object(n.b)("h3",{id:"-top"},"-Top"),Object(n.b)("p",null,"Specifies the maximum number to return."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32\nParameter Sets: List\nDefault value: 0\n")),Object(n.b)("h3",{id:"-resultfilter"},"-ResultFilter"),Object(n.b)("p",null,"Specifies the result of the builds to return Succeeded, PartiallySucceeded, Failed, or Canceled."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-reasonfilter"},"-ReasonFilter"),Object(n.b)("p",null,"Specifies the reason the build was created of the builds to return Manual, IndividualCI, BatchedCI, Schedule, UserCreated, ValidateShelveSet, CheckInShelveSet, Triggered, or All."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-statusfilter"},"-StatusFilter"),Object(n.b)("p",null,"Specifies the status of the builds to return InProgress, Completed, Cancelling, Postponed, NotStarted, or All."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-queues"},"-Queues"),Object(n.b)("p",null,"A comma-delimited list of queue IDs that specifies the builds to return."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32[]\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-definitions"},"-Definitions"),Object(n.b)("p",null,"A comma-delimited list of build definition IDs that specifies the builds to return."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32[]\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-buildnumber"},"-BuildNumber"),Object(n.b)("p",null,"Returns the build with this build number."),Object(n.b)("p",null,"You can also use ",Object(n.b)("em",{parentName:"p"}," for a starts with search.\nFor example: 2015"),"\nWill return all build numbers that start with 2015."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-type"},"-Type"),Object(n.b)("p",null,"The type of builds to retrieve."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-maxbuildsperdefinition"},"-MaxBuildsPerDefinition"),Object(n.b)("p",null,"The maximum number of builds to retrieve for each definition."),Object(n.b)("p",null,"This is only valid when definitions is also specified."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-properties"},"-Properties"),Object(n.b)("p",null,"A comma-delimited list of extended properties to retrieve."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String[]\nParameter Sets: List\n")),Object(n.b)("h3",{id:"-id"},"-Id"),Object(n.b)("p",null,"Specifies one or more builds by ID."),Object(n.b)("p",null,"To specify multiple IDs, use commas to separate the IDs."),Object(n.b)("p",null,"To find the ID of a build, type Get-VSTeamBuild."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Int32[]\nAliases: BuildID\nAccept pipeline input: true (ByPropertyName, ByValue)\n")),Object(n.b)("h3",{id:"-json"},"-JSON"),Object(n.b)("p",null,"Converts the raw response into JSON and displays in the console. This is required when you need to use the object to send back.  Without this switch the JSON produced from the returned object will not match the expected shape of the JSON for sending back to server."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Switch\nRequired: True\nParameter Sets: ByIDJson\n")),Object(n.b)("h3",{id:"-raw"},"-Raw"),Object(n.b)("p",null,"Returns the raw response. This is required when you need to use the object to send back.  Without this switch the object produced from the returned object will not match the expected shape of the JSON for sending back to server."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Switch\nRequired: True\nParameter Sets: ByIDRaw\n")),Object(n.b)("h2",{id:"inputs"},"INPUTS"),Object(n.b)("h2",{id:"outputs"},"OUTPUTS"),Object(n.b)("h3",{id:"teambuild"},"Team.Build"),Object(n.b)("h2",{id:"notes"},"NOTES"),Object(n.b)("p",null,"This function has a Dynamic Parameter for ProjectName that specifies the project for which this function gets builds."),Object(n.b)("p",null,"You can tab complete from a list of available projects."),Object(n.b)("p",null,"You can use Set-VSTeamDefaultProject to set a default project so you do not have to pass the ProjectName with each call."),Object(n.b)("p",null,"You can pipe build IDs to this function."),Object(n.b)("h2",{id:"related-links"},"RELATED LINKS"),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Set-VSTeamAccount"}),"Set-VSTeamAccount")),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Set-VSTeamDefaultProject"}),"Set-VSTeamDefaultProject")),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Add-VSTeamBuild"}),"Add-VSTeamBuild")),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Remove-VSTeamBuild"}),"Remove-VSTeamBuild")))}b.isMDXComponent=!0},313:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var r=a(0),l=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var u=l.a.createContext({}),b=function(e){var t=l.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=b(e.components);return l.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},p=l.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=b(a),p=r,m=s["".concat(i,".").concat(p)]||s[p]||d[p]||n;return a?l.a.createElement(m,c(c({ref:t},u),{},{components:a})):l.a.createElement(m,c({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=p;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<n;u++)i[u]=a[u];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);