(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{192:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return c})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return o})),t.d(a,"default",(function(){return s}));var r=t(2),n=t(9),i=(t(0),t(313)),c={},l={id:"Module/Update-VSTeamVariableGroup",isDocsHomePage:!1,title:"Update-VSTeamVariableGroup",description:"Update-VSTeamVariableGroup",source:"@site/docs/Module/Update-VSTeamVariableGroup.md",permalink:"/vsteam-docs/docs/Module/Update-VSTeamVariableGroup",editUrl:"https://github.com/MethodsAndPractices/vsteam-docs/edit/master/website/docs/Module/Update-VSTeamVariableGroup.md"},o=[{value:"SYNOPSIS",id:"synopsis",children:[]},{value:"SYNTAX",id:"syntax",children:[]},{value:"DESCRIPTION",id:"description",children:[]},{value:"EXAMPLES",id:"examples",children:[{value:"-------------------------- EXAMPLE 1 --------------------------",id:"---------------------------example-1---------------------------",children:[]},{value:"-------------------------- EXAMPLE 2 --------------------------",id:"---------------------------example-2---------------------------",children:[]}]},{value:"PARAMETERS",id:"parameters",children:[{value:"-Confirm",id:"-confirm",children:[]},{value:"-Force",id:"-force",children:[]},{value:"-ProjectName",id:"-projectname",children:[]},{value:"-ProjectName",id:"-projectname-1",children:[]},{value:"-WhatIf",id:"-whatif",children:[]},{value:"-Id",id:"-id",children:[]},{value:"-Description",id:"-description",children:[]},{value:"-Name",id:"-name",children:[]},{value:"-ProviderData",id:"-providerdata",children:[]},{value:"-Type",id:"-type",children:[]},{value:"-Variables",id:"-variables",children:[]},{value:"-Body",id:"-body",children:[]},{value:"CommonParameters",id:"commonparameters",children:[]}]},{value:"INPUTS",id:"inputs",children:[{value:"System.String",id:"systemstring",children:[]}]},{value:"OUTPUTS",id:"outputs",children:[{value:"System.Object",id:"systemobject",children:[]}]},{value:"NOTES",id:"notes",children:[]},{value:"RELATED LINKS",id:"related-links",children:[]}],p={rightToc:o};function s(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"update-vsteamvariablegroup"},"Update-VSTeamVariableGroup"),Object(i.b)("h2",{id:"synopsis"},"SYNOPSIS"),Object(i.b)("p",null,"Updates an existing variable group"),Object(i.b)("h2",{id:"syntax"},"SYNTAX"),Object(i.b)("h2",{id:"description"},"DESCRIPTION"),Object(i.b)("p",null,"Updates an existing variable group"),Object(i.b)("h2",{id:"examples"},"EXAMPLES"),Object(i.b)("h3",{id:"---------------------------example-1---------------------------"},"-------------------------- EXAMPLE 1 --------------------------"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-powershell"}),'\n$methodParameters = @{\n   ProjectName              = "some_project_name"\n   Name        = "new_variable_group"\n   Description = "Describe the Variable Group"\n   Type        = "Vsts"\n   Variables   = @{\n      key1 = @{\n         value = "value1"\n         isSecret = $true\n      }\n   }\n}\n\n$newVariableGroup = Add-VSTeamVariableGroup @methodParameters\n\n$methodParameters = @{\n   id                       = $newVariableGroup.id\n   ProjectName              = "some_project_name"\n   Name        = "new_variable_group"\n   Description = "Describe the Variable Group"\n   Type        = "AzureKeyVault"\n   Variables   = @{\n      name_of_existing_secret  = @{\n         enabled     = $true\n         contentType = ""\n         value       = ""\n         isSecret    = $true\n      }\n   }\n   ProviderData =  @{\n      serviceEndpointId = "AzureRMServiceEndpointGuid"\n      vault             = "name_of_existing_key_vault"\n   }\n}\n\nUpdate-VSTeamVariableGroup @methodParameters\n')),Object(i.b)("h3",{id:"---------------------------example-2---------------------------"},"-------------------------- EXAMPLE 2 --------------------------"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-powershell"}),'# Copy variable group varGroupName from project sourceProjectName to project targetProjectName.  If varGroupName already exists, we\'ll update it; else, we\'ll add it.\n\n$Name = "varGroupName"\n$FromProject  = "sourceProjectName"\n$ToProject = "targetProjectName"\n\n$FromVariableGroupObject = Get-VSTeamVariableGroup -Name $Name -ProjectName $FromProject\n$body = ConvertTo-Json -InputObject $FromVariableGroupObject -Depth 100 -Compress\n$toVariableGroupObject = Get-VSTeamVariableGroup -Name $Name -ProjectName $ToProject\nif ($toVariableGroupObject) {\n   Update-VSTeamVariableGroup -Body $body -ProjectName $ToProject -Id $toVariableGroupObject.id\n}\nelse {\n   Add-VSTeamVariableGroup -Body $body -ProjectName $ToProject\n}\n\n')),Object(i.b)("h2",{id:"parameters"},"PARAMETERS"),Object(i.b)("h3",{id:"-confirm"},"-Confirm"),Object(i.b)("p",null,"Prompts you for confirmation before running the cmdlet."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: SwitchParameter\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-force"},"-Force"),Object(i.b)("p",null,"Does not prompt"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: SwitchParameter\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-projectname"},"-ProjectName"),Object(i.b)("h3",{id:"-projectname-1"},"-ProjectName"),Object(i.b)("p",null,"Specifies the team project for which this function operates."),Object(i.b)("p",null,"You can tab complete from a list of available projects."),Object(i.b)("p",null,"You can use Set-VSTeamDefaultProject to set a default project so\nyou do not have to pass the ProjectName with each call."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nPosition: 0\nRequired: True\nAccept pipeline input: true (ByPropertyName)\n")),Object(i.b)("h3",{id:"-whatif"},"-WhatIf"),Object(i.b)("p",null,"Shows what would happen if the cmdlet runs.\nThe cmdlet is not run."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: SwitchParameter\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-id"},"-Id"),Object(i.b)("p",null,"ID of the existing variable group"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-description"},"-Description"),Object(i.b)("p",null,"The variable group description"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: ByHashtable\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-name"},"-Name"),Object(i.b)("p",null,"The variable group name"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: ByHashtable\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-providerdata"},"-ProviderData"),Object(i.b)("p",null,"The variable group ProviderData.  This parameter is not available in TFS2017. This should be $null for Vsts types."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Hashtable\nParameter Sets: ByHashtable\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-type"},"-Type"),Object(i.b)("p",null,"The variable group type.  This parameter is not available in TFS2017; all variable groups are type Vsts in this case."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: ByHashtable\nAliases:\nAccepted values: Vsts, AzureKeyVault\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-variables"},"-Variables"),Object(i.b)("p",null,"The variable group variables."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: Hashtable\nParameter Sets: ByHashtable\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"-body"},"-Body"),Object(i.b)("p",null,"The json that represents the task group as a string"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"Type: String\nParameter Sets: ByBody\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: True (ByPropertyName)\nAccept wildcard characters: False\n")),Object(i.b)("h3",{id:"commonparameters"},"CommonParameters"),Object(i.b)("p",null,"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.\nFor more information, see about_CommonParameters (",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://go.microsoft.com/fwlink/?LinkID=113216"}),"http://go.microsoft.com/fwlink/?LinkID=113216"),")."),Object(i.b)("h2",{id:"inputs"},"INPUTS"),Object(i.b)("h3",{id:"systemstring"},"System.String"),Object(i.b)("p",null,"System.Collections.Hashtable"),Object(i.b)("h2",{id:"outputs"},"OUTPUTS"),Object(i.b)("h3",{id:"systemobject"},"System.Object"),Object(i.b)("h2",{id:"notes"},"NOTES"),Object(i.b)("h2",{id:"related-links"},"RELATED LINKS"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Add-VSTeamVariableGroup"}),"Add-VSTeamVariableGroup")),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Get-VSTeamVariableGroup"}),"Get-VSTeamVariableGroup")),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/vsteam-docs/docs/Module/Remove-VSTeamVariableGroup"}),"Remove-VSTeamVariableGroup")))}s.isMDXComponent=!0},313:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return m}));var r=t(0),n=t.n(r);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=n.a.createContext({}),s=function(e){var a=n.a.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},b=function(e){var a=s(e.components);return n.a.createElement(p.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},d=n.a.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(t),d=r,m=b["".concat(c,".").concat(d)]||b[d]||u[d]||i;return t?n.a.createElement(m,l(l({ref:a},p),{},{components:t})):n.a.createElement(m,l({ref:a},p))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=d;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var p=2;p<i;p++)c[p]=t[p];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);